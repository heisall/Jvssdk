// Generated by Neo

#ifndef _NPLAYER_PLAY_SUIT_H_
#define _NPLAYER_PLAY_SUIT_H_

#include "types.h"
#include "defines.h"

namespace nplayer {
class PlaySuit {
   public:
    PlaySuit(int window, PlayType type, const audio::Suit* audio,
             const video::Suit* video);
    virtual ~PlaySuit();

    inline int window() const { return window_; }
    inline PlayType type() const { return type_; }

    inline const audio::Suit* audio() const { return audio_; }
    inline const video::Suit* video() const { return video_; }

    inline void set_window(int window) { window_ = window; }
    inline void set_type(PlayType type) { type_ = type; }

    void set_audio(const audio::Suit* audio);
    void set_video(const video::Suit* video);

   private:
    int window_;

    PlayType type_;
    audio::Suit* audio_;
    video::Suit* video_;

   private:
    ONLY_CUSTOM_CONSTRUCTION(PlaySuit);
};
}

#endif /* _NPLAYER_PLAY_SUIT_H_ */
